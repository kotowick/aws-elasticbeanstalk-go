// Code generated by go-bindata.
// sources:
// resources/cloudformation/templates/webserver_v1.json
// resources/cloudformation/templates/worker_v1.json
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesCloudformationTemplatesWebserver_v1Json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\xdf\x73\xdb\x2a\x1a\x7d\x76\xfe\x0a\x46\x4f\xf7\xce\xa4\x6d\x9a\xde\x76\x77\xfc\xe6\x24\xee\xad\xa7\x49\xe3\x8d\xd3\x74\x66\xef\xf4\x01\xa3\x2f\x36\x1b\x04\x5a\x40\x4e\xdd\x4e\xfe\xf7\x1d\xfd\x46\x32\x48\x72\x4c\x76\xee\x53\x12\x09\xbe\x73\x40\xf0\x01\xe7\x90\x5f\x47\xa3\x60\x8e\x25\x8e\x40\x83\x54\x01\x1a\xa3\x5f\x47\xa3\x51\x80\xe3\xf8\x0b\x8e\xa0\xfc\x7b\x14\x5c\x80\x22\x92\xc6\x9a\x0a\x9e\x3e\x0c\xd2\xb7\x48\xdc\xa3\x49\x1c\x33\x4a\x70\xfa\xfc\x75\x70\x9c\x15\xbd\xdd\xc6\x59\xc5\x60\xa1\x25\xe5\xab\xe0\x68\x34\x7a\x4a\xdf\x04\x1b\x90\x8a\x0a\x7e\x89\x97\xc0\xfa\x23\xdf\xe5\xa5\x7b\xa3\xe2\x38\x3e\x4b\xc8\x03\x68\x77\xc8\xfc\x3d\xe2\x69\xe4\xc7\x35\x48\x48\x69\xa3\xb3\x84\x87\x0c\x10\x55\x88\x09\x82\x35\x84\x43\xa0\x3e\xc3\xd6\x8d\xf3\x51\xb0\x10\xe4\x9b\x8f\x94\x01\xaf\xfb\xa7\x00\xea\x8d\x0e\x7c\x33\xac\xcf\xf5\x1a\xd0\x94\x6f\xa8\x14\x3c\x02\xae\xfb\xe2\x6a\x0a\xd2\x1d\xd4\x08\x84\x6e\x29\x48\xf4\xdb\x23\x2c\x15\xc8\x0d\x48\x24\x24\x7a\x14\xf2\x01\xe4\xef\x0e\x8c\xe3\x22\xe4\x3d\x4e\x58\xd6\xff\xc1\xb7\xac\xbc\xf1\xcd\x63\x32\x0b\xfb\x9b\x04\x3f\xa8\xd2\x94\xaf\xd0\xdd\xfc\x1c\xcd\x2e\xfa\x87\x52\x4c\xe6\x92\x6e\xb0\x86\x45\xb2\xe4\xa0\x95\x1b\x22\x2f\x80\x66\xe1\x6f\xea\x77\x74\x2f\x24\xc2\xf5\x90\x45\x58\x29\xba\xca\x1a\x3f\x04\x72\xca\x96\xfb\xc3\x4d\x2f\xcf\xf6\x81\x61\x02\x87\x4b\xcc\x30\x27\x20\xcf\xa5\x50\xea\xdf\x82\x77\x8c\x89\x6f\x94\xb1\x0c\x82\xa4\x65\x11\xde\x60\xca\xf0\x92\x32\xaa\xb7\xe8\xa7\xe0\xa0\x5e\xa3\x5b\x99\xc0\x9b\x8f\x98\x29\x40\x67\x42\x30\xc0\xce\x39\xb5\xfb\x39\xb5\x4c\xa0\x78\x3c\x61\x4c\x3c\x42\x78\x87\x59\x02\x59\xfb\xff\x2a\x5f\xa3\xe0\x3e\x8d\x1e\xa0\xef\xd6\x56\x2c\x80\x24\x92\xea\xed\x9f\x52\x24\x71\x47\xcf\xbd\x70\x53\xec\x5d\x7c\x85\x39\x5e\x41\xd8\xe0\xf8\x37\xa0\x08\xf5\xac\x5c\x80\xdc\x50\x02\x37\x82\x75\x0c\x83\xd9\xe4\x0a\x49\xc1\x00\x25\x0a\x42\xb4\xdc\xa2\x29\xc3\x4a\x53\x82\xce\x00\x73\xa5\x31\x7b\x40\x5a\xa0\x28\x6b\x2c\x52\x79\x44\x35\x9c\x18\x7e\x54\xaf\x20\x8f\xb8\x2c\x03\xbe\x2a\xc2\xbc\x4a\x71\x77\xa6\x09\x59\x43\x57\x2a\x9b\x71\x0d\x92\x63\x96\xa6\x98\xe9\x8f\xfc\xf7\xc1\x6c\xca\xca\x0d\xd0\x89\x52\x82\x50\xac\x61\x9e\x2c\x19\x25\xb3\x78\x12\x86\x12\x54\xc7\x78\x1b\x8c\x97\x8f\xee\x67\xcc\x02\xac\x56\x13\x63\x88\xa4\x33\xd9\x07\x9f\x09\xdf\xa2\xd3\xc0\x44\xb9\xa2\x7c\x41\x7f\x76\xf4\x77\x3b\xf6\x97\x24\x5a\x82\xb4\xc4\x7e\xdb\x8c\x8b\x7f\x78\x8a\xfb\x47\x23\xee\xb9\x10\x2c\x14\x8f\xdc\x43\xe0\x77\x1f\x4e\xea\xd0\x4a\xb0\x24\x0d\xb1\xd0\x98\x3c\x74\xe4\xe8\xa2\x18\xca\xca\xe5\x73\x26\x4d\xd5\xcb\x84\xb2\xfe\x5d\x00\xc3\x09\x27\x6b\x22\xf8\x3d\x5d\x4d\xc9\xe9\x67\xd8\x0e\x5b\xb6\x31\xaf\x97\xb9\xe9\xf9\x29\xfa\x0c\xdb\x39\xa6\x32\x9d\x98\xc0\xf1\x92\x01\x5a\x2c\x3e\x21\x4c\x08\x28\x95\x3e\xcc\x96\xf9\x9d\x69\xbc\x16\x4a\x2b\x93\xe2\xc0\x9c\x67\x90\x9e\xa5\xa1\xb8\xd7\x94\x42\x8b\x90\x87\xe6\x14\x20\xa7\xad\x7c\x62\x23\x5e\x06\x77\xe5\x96\xbc\x14\xca\x8a\x0d\xa1\x93\x2e\x74\x6f\x5f\x47\x94\x48\x61\x07\xbe\x12\x9c\x6a\x91\xd6\xcc\x72\xcf\x06\x77\xec\x5f\x07\x77\xc0\x7b\x14\x51\x9e\x68\x47\x5b\x6f\x84\xd0\x77\x82\x25\x51\x4f\x6b\x07\xc3\xad\xe2\xd3\x3e\x24\x5f\x39\xe4\x7d\x0d\x44\x98\x48\xc2\x47\xac\xc9\x7a\xa1\x25\xe0\xe8\x52\xac\xfc\xa5\x64\x0b\xca\x05\x30\xd0\x70\xcd\x6f\x41\x46\x94\x63\xed\xa3\xe7\x9c\x60\x37\xa0\x81\xa7\xf1\x66\xfc\x02\x6f\xf7\x68\x97\xb3\xeb\xfe\x61\xc0\x88\x28\xc2\x3c\xbc\x80\x98\x89\x6d\xba\x11\x98\x0b\x46\x49\xc7\xe9\x63\xf8\xfa\xc1\xd8\x44\x5f\x73\x02\x3b\x60\xb7\x34\x02\x91\x74\x9c\xa4\x06\x63\x7c\x38\x39\xd9\x89\x7e\x96\x0d\x03\xfa\xd3\xd7\x88\x9e\x83\x24\xc0\x35\x5e\xed\x36\xa4\x82\xf2\x31\x9c\x2d\x4d\x99\xad\xb8\x90\xf0\x09\x30\xd3\xeb\xf3\x35\x74\x2d\x36\xcf\x1e\x66\x39\x52\x8e\x41\x52\x8c\x45\x92\xad\x0d\xb7\x6b\x09\x6a\x2d\x58\xc7\xb1\x6a\x30\xe6\xf5\x43\x0d\xb8\xae\x91\x72\xd0\xed\x33\x90\xdc\xeb\xb4\x15\x68\xff\x74\xda\xf1\x99\xac\x08\x7b\x0f\x69\x27\xc0\x7b\x6b\xfc\xaf\x7c\xed\xbf\xb3\x76\xa0\x24\xc4\x42\xa6\x3b\x87\xc5\x56\x69\x88\x3c\x4d\xa0\x25\x56\x94\xd4\x50\x51\xb5\xca\x4d\x12\x2d\x22\xac\x29\xc1\x8c\x6d\xab\x54\x5a\x35\xb5\x5c\x61\x7d\x64\xf2\x6c\xf3\x5c\x51\x90\x82\x31\xca\x57\x49\x1c\x62\x0d\x57\x94\x57\x48\x33\x5e\x9c\x83\x3c\xf4\xee\x89\x03\x6f\x9a\xed\xc2\x7c\x4c\xab\xd6\x54\x6e\xa0\x78\xfa\x76\xe9\xb8\x76\x21\x78\xcb\xe2\xf3\xdb\x77\x27\x57\x0d\xfd\xab\x54\x4e\x8c\xb4\xf4\x55\xfa\xd8\x0d\x59\xcf\xbe\x97\x02\x87\x67\xc5\x49\xdd\x53\xbf\x11\x86\x55\x63\xd4\x1b\x70\x9e\x20\x0c\xd6\xa1\x71\x36\xf9\xaf\x0a\x73\x75\xec\x5f\x09\x24\xe0\xbb\xd7\xd2\xf0\x9f\xb4\x8e\xe7\x58\xaf\x3d\x04\x7e\xd3\x8c\x7c\x45\xbd\xed\x43\x8d\x41\xf4\xe6\x3f\x4a\xf0\xdd\x26\x9c\x0b\xce\x81\xa4\x05\x7c\x24\x18\x73\x37\x9a\x22\x14\xd1\xfd\x4d\x92\x56\xfc\x19\xc7\x44\xd3\x0d\xd5\x5b\x7f\x10\x6f\xff\x79\xd2\x04\xb9\xa3\x8a\xe6\xa2\x82\x3f\x90\x77\x27\x2d\x90\xa9\x94\x42\x1e\x80\xe4\x4c\xc0\xa7\x4d\x9c\x6a\x1b\x3d\x07\x49\x85\x97\xcd\xc6\x1f\xef\x3f\xb4\x5b\x73\x85\x7f\xdc\x80\x96\x74\x9f\x55\xab\x6f\xb3\x71\x94\xc6\x3f\x1a\x05\x37\xa0\x44\x22\x8d\x05\x31\x30\x7c\x91\xc2\xc8\xc8\x5f\x21\xd4\x00\x98\x7c\x5b\x8c\xc7\xc5\xc1\xba\x3a\x57\x8f\xc7\x96\xda\xc7\x45\xd5\xb9\x14\x31\x48\x5d\x35\x03\xa1\xfc\xb9\x51\xa5\x92\x23\x50\x70\x03\xf7\xe5\xa4\xcb\x9f\x66\xfd\xd1\x6e\x7a\xa3\x68\xd3\xa5\x79\x3a\xae\x10\x16\x59\x13\x73\x33\xa3\xc6\xce\xde\x8d\x82\xc5\x3b\xc3\x84\x69\xe0\x96\xcf\x8b\x48\x55\xf9\xd2\x49\x69\x14\xce\x1e\x3e\x95\x90\x4f\x47\xc5\x8f\x51\xde\xcf\x23\xd3\xad\xa8\x28\x0c\xe9\xd0\xa6\x5d\x82\xdc\x5d\xb9\x6f\x67\xd6\x75\x0c\x88\xb2\x8e\x59\xa9\x72\x77\x1a\x95\x16\xa6\x60\x65\x81\x6a\x09\x5a\xe5\xd7\x1b\x05\x77\x6d\x2f\xad\xae\x63\x1b\x7a\x75\xc5\xeb\xec\x93\x2f\x40\xa7\xbb\xc9\x5c\xc1\x2c\x5e\x8d\x7e\x65\x52\x95\x8a\x71\xbe\xcb\x0a\xf0\xa3\x1a\x03\x39\x1d\x6f\x62\x12\x1c\xa3\xa2\x66\x49\x32\xb8\x9b\x9f\xcf\xc2\xf4\x79\xa6\x85\xb6\x38\x14\xb6\xcf\x53\x85\xbb\x67\xf0\xd2\x66\x71\x87\x6f\xdb\x3f\xcf\x86\x9a\x5e\x9e\xf5\xa3\x99\xce\xcf\x41\x48\xb9\x2e\xde\x0d\x54\x68\xe7\xcf\xc6\x71\x4a\xe1\x6e\x58\xb7\x7a\xde\xc3\x02\x27\x5a\x28\x82\xd3\xcd\xe7\x18\xab\x95\x8d\x8d\x69\x92\xe4\x12\xb8\x83\x87\x5d\x2e\x3f\x98\x40\x29\x8e\xbb\x51\x2b\xf9\xfc\x70\xac\x42\x30\xef\xc0\x2a\x25\xf5\x83\xb1\x2a\x11\xdd\x0d\x56\xeb\xec\x7b\xa0\x99\xda\x60\x22\xb3\x3c\x62\x1b\xcc\xe7\x95\xf2\xed\xc0\x77\xe9\xe4\xde\xa9\xcc\x70\x54\x9e\x13\xe7\x52\xdc\x53\xd6\xa2\x64\x65\xd4\x10\xc1\xfd\x53\x32\x95\xea\x01\xfd\xd3\x54\xb6\xbd\xd3\xb1\xe8\xd7\x03\x48\xd9\x54\x6f\xef\xd4\x5a\xea\xf3\x00\x5a\x6d\xbd\xfa\x05\x29\x0d\xfd\x7c\x6d\xb1\xbe\x2f\x75\xb7\x6c\x8f\x71\x2d\x29\x8f\x99\x58\x29\xdb\x82\x58\xab\xe7\x0e\x3e\x76\xa5\xdd\x3f\x93\x5d\x85\xbd\x97\x90\x45\x94\xf7\xcf\xab\x2d\xc6\xf7\xb2\xda\x51\xef\xf7\xe6\x94\x2b\xb4\xd6\x3e\x6a\x89\xf6\x2e\x32\x2e\x8d\xdf\x1f\x95\xf2\xd4\xd6\xcd\xa0\x3a\xdb\xf9\x03\x6e\xaa\xfd\xdd\xf0\x2d\x67\xe0\x05\x48\x0c\x25\xe0\x13\x7c\xd7\x24\xe8\x26\x61\x31\x15\xfc\x91\x31\xc2\xee\xf8\x08\xdd\xb4\x3a\x1d\x88\x5e\x82\xcb\xb1\x21\x96\x3b\x79\x6d\x7b\xc9\x74\xba\x13\x07\xb3\xe8\x5b\x16\xad\x96\xc5\xc1\xa8\x3d\x73\xd3\xe6\x62\x1c\x8c\x69\xf1\x2b\xfa\xe1\x6d\x26\xc7\xbe\x43\xb3\x65\x64\x8c\x55\xe6\x64\xd8\x96\xba\xda\xe2\xe8\x64\x66\xf5\x44\xf6\x65\x55\x7b\x1e\xb6\xa3\x8b\x69\x83\xa0\x6a\xf5\x42\x55\x77\xa0\xda\x09\x71\x50\x7d\x8e\xa7\xb2\xc7\x86\x26\x17\xfc\xe3\x6c\xd5\x18\x37\x4c\x00\xfb\x41\xc8\xe2\xa7\x38\x88\x0f\x71\x62\x5e\x8a\xe8\x4d\xfe\xfe\x6b\xc3\x95\x19\xc2\xb3\x72\x70\xfe\x2f\xcc\xba\x86\xa8\xc5\xf2\x79\x29\x4e\x3d\x59\xc4\x6e\x0d\xed\x3b\x4f\x0c\xd5\xde\x36\x51\x8c\x2b\xb5\xc6\x72\x81\xbe\xde\x5c\x3a\x4f\xa7\x6e\x2f\x69\x5f\x6e\x60\x8a\x7b\xbb\xe9\xc4\xb8\x3f\xe9\xe0\xe2\xba\x6d\xe9\x97\xc8\x8e\x99\xd5\xcf\x66\xd7\xff\xf2\x4b\x69\xda\xf2\xbe\xfa\x19\x0d\x64\xb1\x1c\x9b\x97\x6c\x6d\xe2\x45\x75\xb5\xd9\x75\xbc\xb2\xdf\x83\x3e\x1c\xb9\x75\x1d\x79\x00\x7c\xfb\x02\xf3\xe1\x1c\xac\xb7\x8e\x07\x30\xb1\xdf\x56\x7e\x7a\x2a\xe8\x7c\x3f\x42\xb5\x60\x9e\x79\x13\xa3\xe0\x3a\xd1\x71\x52\x5f\x58\x0f\xd2\x29\xe9\xf4\x3f\x2e\xbe\x2c\x50\x76\x5d\x31\xbb\xb8\x6e\xfc\x67\x40\x3a\x10\x51\x39\x12\xcb\x3b\x7e\x26\xdb\x8f\x7c\x3c\xfe\x13\xf4\x44\x67\xba\xfc\x5f\x8d\xa1\x95\xb6\x6c\xca\xc3\x58\x50\xae\x33\xf8\xef\x25\xc1\xa3\xa7\xa3\xff\x05\x00\x00\xff\xff\x24\x46\x79\xa0\x81\x32\x00\x00")

func resourcesCloudformationTemplatesWebserver_v1JsonBytes() ([]byte, error) {
	return bindataRead(
		_resourcesCloudformationTemplatesWebserver_v1Json,
		"resources/cloudformation/templates/webserver_v1.json",
	)
}

func resourcesCloudformationTemplatesWebserver_v1Json() (*asset, error) {
	bytes, err := resourcesCloudformationTemplatesWebserver_v1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/cloudformation/templates/webserver_v1.json", size: 12929, mode: os.FileMode(420), modTime: time.Unix(1490306705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesCloudformationTemplatesWorker_v1Json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5d\x6f\xdb\x38\x16\x7d\xb6\x7f\x05\xa1\xa7\x19\x20\x6d\xd3\x74\xda\x5d\xf8\xcd\x49\xdc\xad\xd1\x64\xea\x89\xdd\x14\xd8\xc5\x3c\xd0\xd4\x8d\xcd\x0d\x4d\x6a\x48\xca\xa9\x5b\xe4\xbf\x2f\xf4\x4d\x49\xa4\x24\x27\xcc\x62\x9e\xda\x48\xe4\x3d\x87\xd4\xe5\x25\x79\x8e\x7f\x8e\x47\xc1\x02\x4b\xbc\x03\x0d\x52\x05\x68\x82\x7e\x8e\x47\xa3\x00\x47\xd1\xef\x78\x07\xc5\xdf\xa3\xe0\x12\x14\x91\x34\xd2\x54\xf0\xe4\x61\x90\xbc\x45\xe2\x0e\x4d\xa3\x88\x51\x82\x93\xe7\xaf\x83\x93\xb4\xe9\xea\x10\xa5\x1d\x83\xa5\x96\x94\x6f\x82\xf1\x68\xf4\x98\xbc\x09\xf6\x20\x15\x15\xfc\x0a\xaf\x81\xf5\x47\xbe\xcd\x5a\xf7\x46\xc5\x51\x74\x1e\x93\x7b\xd0\xee\x90\xd9\x7b\xc4\x93\xc8\x0f\x5b\x90\x90\xd0\x46\xe7\x31\x0f\x19\x20\xaa\x10\x13\x04\x6b\x08\x87\x40\x7d\x86\x83\x1b\xe7\xa3\x60\x21\xc8\x37\x1f\x29\x03\x5e\xcd\x4f\x0e\xd4\x1b\x1d\xf8\x7e\xd8\x9c\xeb\x2d\xa0\x19\xdf\x53\x29\xf8\x0e\xb8\xee\x8b\xab\x29\x48\x77\x50\x23\x10\x5a\x51\x90\xe8\x97\x07\x58\x2b\x90\x7b\x90\x48\x48\xf4\x20\xe4\x3d\xc8\x5f\x1d\x18\x27\x79\xc8\x3b\x1c\xb3\x74\xfe\x83\x6f\x69\x7b\xe3\x9b\x47\x64\x1e\xf6\x0f\x09\xbe\x53\xa5\x29\xdf\xa0\xdb\xc5\x05\x9a\x5f\xf6\xa7\x52\x44\x16\x92\xee\xb1\x86\x65\xbc\xe6\xa0\x95\x1b\x22\x6b\x80\xe6\xe1\x2f\xea\x57\x74\x27\x24\xc2\x55\xca\x22\xac\x14\xdd\xa4\x83\x1f\x02\x39\x63\xeb\xe3\xe1\x66\x57\xe7\xc7\xc0\x30\x81\xc3\x35\x66\x98\x13\x90\x17\x52\x28\xf5\x6f\xc1\x3b\x72\xe2\x1b\x65\x2c\x85\x20\x49\x5b\x84\xf7\x98\x32\xbc\xa6\x8c\xea\x03\xfa\x21\x38\xa8\xd7\x68\x25\x63\x78\xf3\x11\x33\x05\xe8\x5c\x08\x06\xd8\xb9\xa6\xda\x9f\x53\xcb\x18\xf2\xc7\x53\xc6\xc4\x03\x84\xb7\x98\xc5\x90\x8e\xff\x3f\xc5\x6b\x14\xdc\x25\xd1\x03\xf4\xa7\x75\x14\x4b\x20\xb1\xa4\xfa\xf0\x2f\x29\xe2\xa8\x63\xe6\x5e\x78\x28\xf6\x29\xbe\xc6\x1c\x6f\x20\xac\x71\xfc\x1b\x50\x84\x6a\x55\x2e\x41\xee\x29\x81\x1b\xc1\x3a\xd2\x60\x3e\xbd\x46\x52\x30\x40\xb1\x82\x10\xad\x0f\x68\xc6\xb0\xd2\x94\xa0\x73\xc0\x5c\x69\xcc\xee\x91\x16\x68\x97\x0e\x16\xa9\x2c\xa2\x1a\x4e\x0c\x3f\xa8\x57\x90\x45\x5c\x17\x01\x5f\xe5\x61\x5e\x25\xb8\xad\x65\x42\xb6\xd0\x55\xca\xe6\x5c\x83\xe4\x98\x25\x25\x66\xf6\x3d\xfb\xff\x60\x36\x45\xe7\x1a\xe8\x54\x29\x41\x28\xd6\xb0\x88\xd7\x8c\x92\x79\x34\x0d\x43\x09\xaa\x23\xdf\x06\xe3\x65\xd9\xfd\x84\x55\x80\xd5\x66\x6a\xa4\x48\xb2\x92\x7d\xf0\x99\xf2\x03\x3a\x0b\x4c\x94\x6b\xca\x97\xf4\x47\xc7\x7c\x37\x63\xff\x1e\xef\xd6\x20\x2d\xb1\xdf\xd6\xe3\xe2\xef\x9e\xe2\xfe\x56\x8b\x7b\x21\x04\x0b\xc5\x03\xf7\x10\xf8\xdd\x87\xd3\x2a\xb4\x12\x2c\x4e\x42\x2c\x35\x26\xf7\x1d\x35\x3a\x6f\x86\xd2\x76\xd9\x9a\x49\x4a\xf5\x3a\xa6\xac\xff\x14\xc0\x70\xcc\xc9\x96\x08\x7e\x47\x37\x33\x72\xf6\x19\x0e\xc3\xb6\x6d\xcc\xab\x6d\x6e\x76\x71\x86\x3e\xc3\x61\x81\xa9\x4c\x16\x26\x70\xbc\x66\x80\x96\xcb\x4f\x08\x13\x02\x4a\x25\x0f\xd3\x6d\xbe\xb5\x8c\xb7\x42\x69\x65\x52\x1c\x58\xf3\x0c\xd2\xf3\x24\x14\xf7\x5a\x52\x68\x1e\xf2\xb9\x35\x05\xc8\x59\xa3\x9e\xd8\x88\x17\xc1\x5d\xb5\x25\x6b\x85\xd2\x66\x43\xe8\x24\x1b\xdd\xdb\xd7\x3b\x4a\xa4\xb0\x03\x5f\x0b\x4e\xb5\x48\x7a\xa6\xb5\x67\x8f\x3b\xce\xaf\x83\x27\xe0\x3d\xda\x51\x1e\x6b\xc7\x58\x6f\x84\xd0\xb7\x82\xc5\xbb\x9e\xd1\x0e\x86\xdb\x44\x67\x7d\x48\xbe\x6a\xc8\xfb\x0a\x88\x30\x11\x87\x0f\x58\x93\xed\x52\x4b\xc0\xbb\x2b\xb1\xf1\x57\x92\x2d\x28\x97\xc0\x40\xc3\x17\xbe\x02\xb9\xa3\x1c\x6b\x1f\x33\xe7\x04\xbb\x01\x0d\x3c\x89\x37\xe7\x97\xf8\x70\xc4\xb8\x9c\x53\xf7\x0f\x03\x46\xec\x76\x98\x87\x97\x10\x31\x71\x48\x0e\x02\x0b\xc1\x28\xe9\xb8\x7d\x0c\xdf\x3f\x18\x9b\xea\x2f\x9c\x40\x0b\x6c\x45\x77\x20\xe2\x8e\x9b\xd4\x60\x8c\x0f\xa7\xa7\xad\xe8\xe7\x69\x1a\xd0\x1f\xbe\x32\x7a\x01\x92\x00\xd7\x78\xd3\x1e\x48\x09\xe5\x23\x9d\x2d\x43\x99\x6f\xb8\x90\xf0\x09\x30\xd3\xdb\x8b\x2d\x74\x6d\x36\x4f\x4e\xb3\x0c\x29\xc3\x20\x09\xc6\x32\x4e\xf7\x86\xd5\x56\x82\xda\x0a\xd6\x71\xad\x1a\x8c\xf9\xe5\xbe\x02\xdc\x56\x48\x19\xe8\xe1\x09\x48\xee\x7d\xda\x0a\x74\x7c\x39\xed\xf8\x4c\x56\x84\xa3\x53\xda\x09\xf0\xde\x1a\xff\x2b\xdf\xfa\x9f\xac\x16\x94\x84\x48\xc8\xe4\xe4\xb0\x3c\x28\x0d\x3b\x4f\x0b\x68\x8d\x15\x25\x15\xd4\xae\xdc\xe5\xa6\xb1\x16\x3b\xac\x29\xc1\x8c\x1d\xca\x52\x5a\x0e\xb5\xd8\x61\x7d\x54\xf2\xf4\xf0\x5c\x52\x90\x82\x31\xca\x37\x71\x14\x62\x0d\xd7\x94\x97\x48\x73\x9e\xdf\x83\x3c\xcc\xee\xa9\x03\x6f\x96\x9e\xc2\x7c\x2c\xab\xc6\x52\xae\xa1\x78\xfa\x76\x49\x5e\xbb\x10\xbc\x55\xf1\xc5\xea\xdd\xe9\x75\x4d\xff\x2a\x94\x13\xa3\x2c\x7d\x95\x3e\x4e\x43\xd6\xbb\xef\x95\xc0\xe1\x79\x7e\x53\xf7\x34\x6f\x84\x61\x55\xcb\x7a\x03\xce\x13\x84\xc1\x3a\x34\xee\x26\x7f\xa9\x30\x53\xc7\xfe\x88\x21\x06\xdf\xb3\x96\x84\xff\xa4\x75\xb4\xc0\x7a\xeb\x21\xf0\x9b\x7a\xe4\x6b\xea\xed\x1c\x6a\x24\xd1\x9b\xff\x2a\xc1\xdb\x43\xb8\x10\x9c\x03\x49\x1a\xf8\x28\x30\xe6\x69\x34\x41\xc8\xa3\xfb\x5b\x24\x8d\xf8\x73\x8e\x89\xa6\x7b\xaa\x0f\xfe\x20\xde\xfe\xf3\xb4\x0e\x72\x4b\x15\xcd\x44\x05\x7f\x20\xef\x4e\x1b\x20\x33\x29\x85\x7c\x06\x92\xb3\x00\x9f\xd5\x71\xca\x63\xf4\x02\x24\x15\x5e\x0e\x1b\xbf\xbd\xff\xd0\x1c\xcd\x35\xfe\x7e\x03\x5a\xd2\x63\x76\xad\xbe\xc3\xc6\x38\x89\x3f\x1e\x05\x37\xa0\x44\x2c\x8d\x0d\x31\x30\x7c\x91\xdc\xc8\xc8\x5e\x21\x54\x03\x98\x7e\x5b\x4e\x26\xf9\xc5\xba\xbc\x57\x4f\x26\x96\xde\x27\x79\xd7\x85\x14\x11\x48\x5d\x0e\x03\xa1\xec\xb9\xd1\xa5\x94\x23\x50\x70\x03\x77\xc5\xa2\xcb\x9e\xa6\xf3\xd1\x1c\x7a\xad\x69\xdd\xa5\x79\x3c\x29\x11\x96\xe9\x10\x33\x33\xa3\xc2\x4e\xdf\x8d\x82\xe5\x3b\xc3\x84\xa9\xe1\x16\xcf\xf3\x48\x65\xfb\xc2\x49\xa9\x35\x4e\x1f\x3e\x16\x90\x8f\xe3\xfc\x9f\x51\x36\xcf\x23\xd3\xad\x28\x29\x0c\x99\xd0\xba\x5d\x82\xdc\x53\x79\xec\x64\x56\x7d\x0c\x88\xa2\x8f\xd9\xa9\x74\x77\x6a\x9d\x96\xa6\x60\x65\x81\x6a\x08\x5a\xc5\xd7\x1b\x05\xb7\x4d\x2f\xad\xea\x63\x4b\xbd\xaa\xe3\x8a\x82\x0c\xf2\xfc\x4f\x1f\x14\xa8\x85\x75\x73\x52\xbe\xa9\x4a\xc6\x1f\xcb\x37\x9f\x56\xab\x45\x90\xbf\xaa\xa2\x7d\x49\x13\x68\x09\x3a\x39\x9b\x66\x7a\x68\xd1\xfd\x67\x1a\x59\x45\x38\x3b\xb3\x05\xf8\x41\x4d\x80\x9c\x4d\xf6\x11\x09\x4e\x50\xde\xb3\x04\xbf\x5d\x5c\xcc\xc3\xe4\x79\xaa\xac\x36\x46\x94\x9b\x48\x8f\x25\xee\x91\xc1\x0b\xd3\xc6\x1d\xbe\x69\x26\x3d\x19\x6a\x76\x75\xde\x8f\x66\xfa\x48\xcf\x42\xca\x54\xf6\x6e\xa0\x5c\x89\x7f\x32\x8e\x53\x58\x77\xc3\xba\xb5\xf8\x1e\x16\x38\xd6\x42\x11\x9c\x1c\x65\x27\x58\x6d\x6c\x6c\x4c\xcb\x25\x13\xd4\x1d\x3c\xec\xe2\xfb\xb3\x09\x14\x52\xbb\x1b\xb5\x14\xe3\x9f\x8f\x95\xcb\xef\x1d\x58\x85\x40\xff\x6c\xac\x52\x92\x77\x83\x55\xaa\xfd\x11\x68\xa6\xd2\x18\xcb\xb4\x2a\xd9\x92\xf9\xa2\xd4\xd1\x1d\xf8\x2e\xd5\xdd\x3b\x95\x39\xde\x15\xb7\xce\x85\x14\x77\x94\x35\x28\x59\x19\xd5\x24\x75\xff\x94\x4c\xdd\x7b\xc0\xfc\xd4\x75\x72\xef\x74\x2c\x6a\xf8\x00\x52\x36\x0d\xdd\x3b\xb5\x86\x96\x3d\x80\x56\x53\xfd\x7e\x41\x4a\x43\x3f\x5f\x53\xfa\xef\x2b\xdd\x0d\x13\x65\x52\x09\xd4\x13\x26\x36\xca\xb6\x21\x56\x5a\xbc\x83\x8f\x5d\xb7\xf7\xcf\xa4\xad\xd7\xf7\x12\xb2\x48\xfc\xfe\x79\x35\xa5\xfd\x5e\x56\x2d\x2f\xe0\x68\x4e\x99\xde\x6b\x9d\xa3\x86\x05\xe0\x22\xe3\x72\x0c\xfc\x51\x29\xee\x80\xdd\x0c\xca\x9b\xa2\x3f\xe0\xba\x77\xd0\x0d\xdf\xf0\x19\x5e\x80\xc4\x50\x02\x3e\xc1\xdb\x96\x43\x37\x09\x8b\x45\xe1\x8f\x8c\x11\xb6\xe5\x4a\x74\xd3\xea\xf4\x33\x7a\x09\xae\x27\x86\xf4\xee\xe4\x75\xe8\x25\xd3\xe9\x75\x3c\x9b\x45\xdf\xb6\x68\x35\x40\x9e\x8d\xda\xb3\x36\x6d\x9e\xc8\xb3\x31\x2d\xee\x47\x3f\xbc\xcd\x32\x39\x36\x35\x1b\xb6\xc8\x44\xa5\xbe\x88\x6d\xab\xab\x0c\x93\x4e\x66\x56\x87\xe5\x58\x56\x95\x83\x62\xbb\xba\x98\xa6\x0a\x2a\x77\x2f\x54\x4e\x07\xaa\x7c\x15\x07\xd5\xa7\x38\x34\x47\x1c\x68\x32\xfb\x20\x4a\x77\x8d\x49\xcd\x52\xb0\x5f\x84\x2c\xee\x8c\x83\xf8\x10\x5f\xe7\xa5\x88\xde\x64\xef\xbf\xd6\x3c\x9e\x21\x3c\x4b\x3f\xe8\xff\xc2\xac\x2b\x45\x2d\x06\xd2\x4b\x71\xea\xa9\x22\x76\xa3\xe9\xd8\x75\x62\x78\x00\xb6\x85\x62\xfc\x40\xd7\xd8\x2e\xd0\xd7\x9b\x2b\xe7\xed\xd4\xed\x4c\x1d\xcb\x0d\x4c\xa9\xb0\x5d\x4e\x8c\x5f\x63\x3a\xb8\xb8\x7e\xbb\xe9\x97\x48\xcb\x1a\xeb\x67\xd3\x76\xd3\xfc\x52\x9a\x35\x9c\xb4\x7e\x46\x4f\x63\xa1\xfe\x52\xb6\x33\x89\x69\xae\xb9\x33\xc5\x66\xc3\x79\x22\x50\xda\x6f\x1d\xd0\x95\x45\xe7\x09\xb4\x74\xe6\x3a\x40\x2b\xf7\xce\xe3\x48\x4d\x97\xae\x67\xc0\x35\x43\xcf\x13\x85\x86\x8d\xd7\xc1\xa0\x69\xf8\x79\x22\xd0\xf6\xf9\x3a\x38\x58\x4c\x41\x4f\x34\xda\xfe\x5c\x07\x0d\x8b\x99\xe7\x89\x86\xc3\x2b\xec\xe0\xe2\x72\x17\x3d\x11\x6a\x9a\x8a\x1d\x4c\x5a\xfe\xa3\xaf\xa5\x59\x39\x8e\x5d\x8b\xd3\xf0\x25\x1f\x1f\x73\xdc\x3f\xc7\xa8\xb2\xbe\xc6\xa3\xc7\xf1\xe3\xf8\x7f\x01\x00\x00\xff\xff\x5a\x87\xb7\xae\xaa\x35\x00\x00")

func resourcesCloudformationTemplatesWorker_v1JsonBytes() ([]byte, error) {
	return bindataRead(
		_resourcesCloudformationTemplatesWorker_v1Json,
		"resources/cloudformation/templates/worker_v1.json",
	)
}

func resourcesCloudformationTemplatesWorker_v1Json() (*asset, error) {
	bytes, err := resourcesCloudformationTemplatesWorker_v1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/cloudformation/templates/worker_v1.json", size: 13738, mode: os.FileMode(420), modTime: time.Unix(1490241241, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/cloudformation/templates/webserver_v1.json": resourcesCloudformationTemplatesWebserver_v1Json,
	"resources/cloudformation/templates/worker_v1.json": resourcesCloudformationTemplatesWorker_v1Json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"cloudformation": &bintree{nil, map[string]*bintree{
			"templates": &bintree{nil, map[string]*bintree{
				"webserver_v1.json": &bintree{resourcesCloudformationTemplatesWebserver_v1Json, map[string]*bintree{}},
				"worker_v1.json": &bintree{resourcesCloudformationTemplatesWorker_v1Json, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

